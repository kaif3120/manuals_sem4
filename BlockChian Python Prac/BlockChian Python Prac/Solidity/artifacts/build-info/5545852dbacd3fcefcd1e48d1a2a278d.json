{
	"id": "5545852dbacd3fcefcd1e48d1a2a278d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.0",
	"solcLongVersion": "0.5.0+commit.1d4f565a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Blockchain/view functions.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\ncontract Test {\r\n    // Function to calculate product and sum of two numbers\r\n    // Marked as `pure` since it does not interact with state variables\r\n    function getResult() public pure returns (uint product, uint sum) {\r\n        uint a = 1; // local variable\r\n        uint b = 2;\r\n        product = a * b;\r\n        sum = a + b;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Blockchain/view functions.sol": {
				"Test": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getResult",
							"outputs": [
								{
									"name": "product",
									"type": "uint256"
								},
								{
									"name": "sum",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Blockchain/view functions.sol\":27:367  contract Test {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Blockchain/view functions.sol\":27:367  contract Test {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Blockchain/view functions.sol\":27:367  contract Test {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0xde292789\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Blockchain/view functions.sol\":182:364  function getResult() public pure returns (uint product, uint sum) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_3\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_3:\n        /* \"Blockchain/view functions.sol\":182:364  function getResult() public pure returns (uint product, uint sum) {\r... */\n      pop\n      tag_4\n      jump(tag_5)\n    tag_4:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"Blockchain/view functions.sol\":224:236  uint product */\n      0x0\n        /* \"Blockchain/view functions.sol\":238:246  uint sum */\n      dup1\n        /* \"Blockchain/view functions.sol\":259:265  uint a */\n      0x0\n        /* \"Blockchain/view functions.sol\":268:269  1 */\n      0x1\n        /* \"Blockchain/view functions.sol\":259:269  uint a = 1 */\n      swap1\n      pop\n        /* \"Blockchain/view functions.sol\":298:304  uint b */\n      0x0\n        /* \"Blockchain/view functions.sol\":307:308  2 */\n      0x2\n        /* \"Blockchain/view functions.sol\":298:308  uint b = 2 */\n      swap1\n      pop\n        /* \"Blockchain/view functions.sol\":333:334  b */\n      dup1\n        /* \"Blockchain/view functions.sol\":329:330  a */\n      dup3\n        /* \"Blockchain/view functions.sol\":329:334  a * b */\n      mul\n        /* \"Blockchain/view functions.sol\":319:334  product = a * b */\n      swap4\n      pop\n        /* \"Blockchain/view functions.sol\":355:356  b */\n      dup1\n        /* \"Blockchain/view functions.sol\":351:352  a */\n      dup3\n        /* \"Blockchain/view functions.sol\":351:356  a + b */\n      add\n        /* \"Blockchain/view functions.sol\":345:356  sum = a + b */\n      swap3\n      pop\n        /* \"Blockchain/view functions.sol\":182:364  function getResult() public pure returns (uint product, uint sum) {\r... */\n      pop\n      pop\n      swap1\n      swap2\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820e7c985b46ad980812f0bbfbc291231578e672a657c05e4349b1076ab0617f0a20029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060be8061001f6000396000f3fe608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063de292789146044575b600080fd5b348015604f57600080fd5b5060566073565b604051808381526020018281526020019250505060405180910390f35b600080600060019050600060029050808202935080820192505050909156fea165627a7a72305820e7c985b46ad980812f0bbfbc291231578e672a657c05e4349b1076ab0617f0a20029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xBE DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xDE292789 EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x56 PUSH1 0x73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x2 SWAP1 POP DUP1 DUP3 MUL SWAP4 POP DUP1 DUP3 ADD SWAP3 POP POP POP SWAP1 SWAP2 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe7 0xc9 DUP6 0xb4 PUSH11 0xD980812F0BBFBC29123157 DUP15 PUSH8 0x2A657C05E4349B10 PUSH23 0xAB0617F0A2002900000000000000000000000000000000 ",
							"sourceMap": "27:340:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27:340:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063de292789146044575b600080fd5b348015604f57600080fd5b5060566073565b604051808381526020018281526020019250505060405180910390f35b600080600060019050600060029050808202935080820192505050909156fea165627a7a72305820e7c985b46ad980812f0bbfbc291231578e672a657c05e4349b1076ab0617f0a20029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xDE292789 EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x56 PUSH1 0x73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x2 SWAP1 POP DUP1 DUP3 MUL SWAP4 POP DUP1 DUP3 ADD SWAP3 POP POP POP SWAP1 SWAP2 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe7 0xc9 DUP6 0xb4 PUSH11 0xD980812F0BBFBC29123157 DUP15 PUSH8 0x2A657C05E4349B10 PUSH23 0xAB0617F0A2002900000000000000000000000000000000 ",
							"sourceMap": "27:340:0:-;;;;;;;;;;;;;;;;;;;;;;;;182:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;182:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;224:12;238:8;259:6;268:1;259:10;;298:6;307:1;298:10;;333:1;329;:5;319:15;;355:1;351;:5;345:11;;182:182;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "38000",
								"executionCost": "87",
								"totalCost": "38087"
							},
							"external": {
								"getResult()": "276"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 367,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 367,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 367,
									"name": "MSTORE"
								},
								{
									"begin": 27,
									"end": 367,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 367,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 367,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 367,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 367,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 367,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 367,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 367,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 367,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820e7c985b46ad980812f0bbfbc291231578e672a657c05e4349b1076ab0617f0a20029",
									".code": [
										{
											"begin": 27,
											"end": 367,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "SWAP1"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "DIV"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "AND"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "PUSH",
											"value": "DE292789"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 367,
											"name": "REVERT"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "JUMPDEST"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "JUMP"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "JUMPDEST"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "MLOAD"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "DUP1"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "DUP2"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "MSTORE"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "ADD"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "DUP3"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "DUP2"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "MSTORE"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "ADD"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "SWAP3"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "MLOAD"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "DUP1"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "SWAP2"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "SUB"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "SWAP1"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "RETURN"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 238,
											"end": 246,
											"name": "DUP1"
										},
										{
											"begin": 259,
											"end": 265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 268,
											"end": 269,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 259,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 259,
											"end": 269,
											"name": "POP"
										},
										{
											"begin": 298,
											"end": 304,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 307,
											"end": 308,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 298,
											"end": 308,
											"name": "SWAP1"
										},
										{
											"begin": 298,
											"end": 308,
											"name": "POP"
										},
										{
											"begin": 333,
											"end": 334,
											"name": "DUP1"
										},
										{
											"begin": 329,
											"end": 330,
											"name": "DUP3"
										},
										{
											"begin": 329,
											"end": 334,
											"name": "MUL"
										},
										{
											"begin": 319,
											"end": 334,
											"name": "SWAP4"
										},
										{
											"begin": 319,
											"end": 334,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 356,
											"name": "DUP1"
										},
										{
											"begin": 351,
											"end": 352,
											"name": "DUP3"
										},
										{
											"begin": 351,
											"end": 356,
											"name": "ADD"
										},
										{
											"begin": 345,
											"end": 356,
											"name": "SWAP3"
										},
										{
											"begin": 345,
											"end": 356,
											"name": "POP"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "SWAP1"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "SWAP2"
										},
										{
											"begin": 182,
											"end": 364,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getResult()": "de292789"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getResult\",\"outputs\":[{\"name\":\"product\",\"type\":\"uint256\"},{\"name\":\"sum\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Blockchain/view functions.sol\":\"Test\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Blockchain/view functions.sol\":{\"keccak256\":\"0x278c92270be7ddd7a57efe296989bae34cb700ee9a8526371adcb5de57d86606\",\"urls\":[\"bzzr://116f666cd35e0f3dabffd82dcbbb8c7b1fe2919002e9c29d9af7602642d84741\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Blockchain/view functions.sol": {
				"ast": {
					"absolutePath": "Blockchain/view functions.sol",
					"exportedSymbols": {
						"Test": [
							30
						]
					},
					"id": 31,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "Test",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "248:116:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"name": "a",
														"nodeType": "VariableDeclaration",
														"scope": 28,
														"src": "259:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 8,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "259:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 11,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "268:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "259:10:0"
											},
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"name": "b",
														"nodeType": "VariableDeclaration",
														"scope": 28,
														"src": "298:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 12,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "298:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 15,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "32",
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "307:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "298:10:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 16,
														"name": "product",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "319:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 17,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "329:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 18,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "333:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "329:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "319:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "319:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 22,
														"name": "sum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "345:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 23,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "351:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 24,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "355:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "351:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "345:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "345:11:0"
											}
										]
									},
									"documentation": null,
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "200:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "product",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "224:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "224:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"name": "sum",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "238:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "238:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "223:24:0"
									},
									"scope": 30,
									"src": "182:182:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 31,
							"src": "27:340:0"
						}
					],
					"src": "0:369:0"
				},
				"id": 0
			}
		}
	}
}