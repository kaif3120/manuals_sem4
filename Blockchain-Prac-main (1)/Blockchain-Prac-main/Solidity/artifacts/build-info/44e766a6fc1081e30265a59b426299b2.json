{
	"id": "44e766a6fc1081e30265a59b426299b2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.0",
	"solcLongVersion": "0.5.0+commit.1d4f565a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Blockchain/Logical operator.sol": {
				"content": "// Solidity program to demonstrate Logical Operators\r\npragma solidity ^0.5.0;\r\n// Creating a contract\r\ncontract LogicalOperator {\r\n// Defining function to demonstrate Logical operators\r\nfunction logic(bool a, bool b) public pure returns (bool, bool, bool) {\r\n// Logical AND operator\r\nbool andResult = a && b;\r\n// Logical OR operator\r\nbool orResult = a || b;\r\n// Logical NOT operator\r\nbool notResult = !a;\r\nreturn (andResult, orResult, notResult);\r\n}\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Blockchain/Logical operator.sol": {
				"LogicalOperator": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "a",
									"type": "bool"
								},
								{
									"name": "b",
									"type": "bool"
								}
							],
							"name": "logic",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								},
								{
									"name": "",
									"type": "bool"
								},
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Blockchain/Logical operator.sol\":103:452  contract LogicalOperator {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Blockchain/Logical operator.sol\":103:452  contract LogicalOperator {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Blockchain/Logical operator.sol\":103:452  contract LogicalOperator {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x87bfe677\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Blockchain/Logical operator.sol\":186:449  function logic(bool a, bool b) public pure returns (bool, bool, bool) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_3\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_3:\n        /* \"Blockchain/Logical operator.sol\":186:449  function logic(bool a, bool b) public pure returns (bool, bool, bool) {\r... */\n      pop\n      tag_4\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n        /* \"Blockchain/Logical operator.sol\":186:449  function logic(bool a, bool b) public pure returns (bool, bool, bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_6)\n    tag_4:\n      mload(0x40)\n      dup1\n      dup5\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \"Blockchain/Logical operator.sol\":238:242  bool */\n      0x0\n        /* \"Blockchain/Logical operator.sol\":244:248  bool */\n      dup1\n        /* \"Blockchain/Logical operator.sol\":250:254  bool */\n      0x0\n        /* \"Blockchain/Logical operator.sol\":284:298  bool andResult */\n      dup1\n        /* \"Blockchain/Logical operator.sol\":301:302  a */\n      dup6\n        /* \"Blockchain/Logical operator.sol\":301:307  a && b */\n      dup1\n      iszero\n      tag_8\n      jumpi\n      pop\n        /* \"Blockchain/Logical operator.sol\":306:307  b */\n      dup5\n        /* \"Blockchain/Logical operator.sol\":301:307  a && b */\n    tag_8:\n        /* \"Blockchain/Logical operator.sol\":284:307  bool andResult = a && b */\n      swap1\n      pop\n        /* \"Blockchain/Logical operator.sol\":334:347  bool orResult */\n      0x0\n        /* \"Blockchain/Logical operator.sol\":350:351  a */\n      dup7\n        /* \"Blockchain/Logical operator.sol\":350:356  a || b */\n      dup1\n      tag_9\n      jumpi\n      pop\n        /* \"Blockchain/Logical operator.sol\":355:356  b */\n      dup6\n        /* \"Blockchain/Logical operator.sol\":350:356  a || b */\n    tag_9:\n        /* \"Blockchain/Logical operator.sol\":334:356  bool orResult = a || b */\n      swap1\n      pop\n        /* \"Blockchain/Logical operator.sol\":384:398  bool notResult */\n      0x0\n        /* \"Blockchain/Logical operator.sol\":402:403  a */\n      dup8\n        /* \"Blockchain/Logical operator.sol\":401:403  !a */\n      iszero\n        /* \"Blockchain/Logical operator.sol\":384:403  bool notResult = !a */\n      swap1\n      pop\n        /* \"Blockchain/Logical operator.sol\":414:423  andResult */\n      dup3\n        /* \"Blockchain/Logical operator.sol\":425:433  orResult */\n      dup3\n        /* \"Blockchain/Logical operator.sol\":435:444  notResult */\n      dup3\n        /* \"Blockchain/Logical operator.sol\":406:445  return (andResult, orResult, notResult) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"Blockchain/Logical operator.sol\":186:449  function logic(bool a, bool b) public pure returns (bool, bool, bool) {\r... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058208b992e2c9fd8c4fccf3cc3c0c06c653a857fa4b4ccc8d7978a78c83beabbaa040029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610119806100206000396000f3fe608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806387bfe677146044575b600080fd5b348015604f57600080fd5b50608760048036036040811015606457600080fd5b8101908080351515906020019092919080351515906020019092919050505060b7565b60405180841515151581526020018315151515815260200182151515158152602001935050505060405180910390f35b60008060008085801560c65750845b90506000868060d25750855b9050600087159050828282955095509550505050925092509256fea165627a7a723058208b992e2c9fd8c4fccf3cc3c0c06c653a857fa4b4ccc8d7978a78c83beabbaa040029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x87BFE677 EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH1 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP6 DUP1 ISZERO PUSH1 0xC6 JUMPI POP DUP5 JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP1 PUSH1 0xD2 JUMPI POP DUP6 JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 ISZERO SWAP1 POP DUP3 DUP3 DUP3 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP12 SWAP10 0x2e 0x2c SWAP16 0xd8 0xc4 0xfc 0xcf EXTCODECOPY 0xc3 0xc0 0xc0 PUSH13 0x653A857FA4B4CCC8D7978A78C8 EXTCODESIZE 0xea 0xbb 0xaa DIV STOP 0x29 ",
							"sourceMap": "103:349:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;103:349:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806387bfe677146044575b600080fd5b348015604f57600080fd5b50608760048036036040811015606457600080fd5b8101908080351515906020019092919080351515906020019092919050505060b7565b60405180841515151581526020018315151515815260200182151515158152602001935050505060405180910390f35b60008060008085801560c65750845b90506000868060d25750855b9050600087159050828282955095509550505050925092509256fea165627a7a723058208b992e2c9fd8c4fccf3cc3c0c06c653a857fa4b4ccc8d7978a78c83beabbaa040029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x87BFE677 EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH1 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP6 DUP1 ISZERO PUSH1 0xC6 JUMPI POP DUP5 JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP1 PUSH1 0xD2 JUMPI POP DUP6 JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 ISZERO SWAP1 POP DUP3 DUP3 DUP3 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP12 SWAP10 0x2e 0x2c SWAP16 0xd8 0xc4 0xfc 0xcf EXTCODECOPY 0xc3 0xc0 0xc0 PUSH13 0x653A857FA4B4CCC8D7978A78C8 EXTCODESIZE 0xea 0xbb 0xaa DIV STOP 0x29 ",
							"sourceMap": "103:349:0:-;;;;;;;;;;;;;;;;;;;;;;;;186:263;;8:9:-1;5:2;;;30:1;27;20:12;5:2;186:263:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;186:263:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:4;244;250;284:14;301:1;:6;;;;;306:1;301:6;284:23;;334:13;350:1;:6;;;;355:1;350:6;334:22;;384:14;402:1;401:2;384:19;;414:9;425:8;435:9;406:39;;;;;;;;;186:263;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "56200",
								"executionCost": "105",
								"totalCost": "56305"
							},
							"external": {
								"logic(bool,bool)": "520"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 103,
									"end": 452,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 103,
									"end": 452,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 103,
									"end": 452,
									"name": "MSTORE"
								},
								{
									"begin": 103,
									"end": 452,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 103,
									"end": 452,
									"name": "POP"
								},
								{
									"begin": 103,
									"end": 452,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 103,
									"end": 452,
									"name": "DUP1"
								},
								{
									"begin": 103,
									"end": 452,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 103,
									"end": 452,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 103,
									"end": 452,
									"name": "CODECOPY"
								},
								{
									"begin": 103,
									"end": 452,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 103,
									"end": 452,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058208b992e2c9fd8c4fccf3cc3c0c06c653a857fa4b4ccc8d7978a78c83beabbaa040029",
									".code": [
										{
											"begin": 103,
											"end": 452,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "MSTORE"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "LT"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "JUMPI"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "SWAP1"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "DIV"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "AND"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "DUP1"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "PUSH",
											"value": "87BFE677"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "EQ"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "JUMPI"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "JUMPDEST"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "DUP1"
										},
										{
											"begin": 103,
											"end": 452,
											"name": "REVERT"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "JUMPDEST"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "DUP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ADD"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "DUP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "DUP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ADD"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP3"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP2"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "DUP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ADD"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP3"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP2"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "JUMP"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "JUMPDEST"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "MLOAD"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "DUP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "DUP5"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "MSTORE"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ADD"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "DUP4"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "MSTORE"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ADD"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "DUP3"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "MSTORE"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "ADD"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP4"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "MLOAD"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "DUP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP2"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SUB"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP1"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "RETURN"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 242,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 244,
											"end": 248,
											"name": "DUP1"
										},
										{
											"begin": 250,
											"end": 254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 284,
											"end": 298,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 302,
											"name": "DUP6"
										},
										{
											"begin": 301,
											"end": 307,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 307,
											"name": "ISZERO"
										},
										{
											"begin": 301,
											"end": 307,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 301,
											"end": 307,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 307,
											"name": "POP"
										},
										{
											"begin": 306,
											"end": 307,
											"name": "DUP5"
										},
										{
											"begin": 301,
											"end": 307,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 301,
											"end": 307,
											"name": "JUMPDEST"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "SWAP1"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "POP"
										},
										{
											"begin": 334,
											"end": 347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 350,
											"end": 351,
											"name": "DUP7"
										},
										{
											"begin": 350,
											"end": 356,
											"name": "DUP1"
										},
										{
											"begin": 350,
											"end": 356,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 350,
											"end": 356,
											"name": "JUMPI"
										},
										{
											"begin": 350,
											"end": 356,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 356,
											"name": "DUP6"
										},
										{
											"begin": 350,
											"end": 356,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 350,
											"end": 356,
											"name": "JUMPDEST"
										},
										{
											"begin": 334,
											"end": 356,
											"name": "SWAP1"
										},
										{
											"begin": 334,
											"end": 356,
											"name": "POP"
										},
										{
											"begin": 384,
											"end": 398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 402,
											"end": 403,
											"name": "DUP8"
										},
										{
											"begin": 401,
											"end": 403,
											"name": "ISZERO"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SWAP1"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "POP"
										},
										{
											"begin": 414,
											"end": 423,
											"name": "DUP3"
										},
										{
											"begin": 425,
											"end": 433,
											"name": "DUP3"
										},
										{
											"begin": 435,
											"end": 444,
											"name": "DUP3"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "SWAP6"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "SWAP6"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "SWAP6"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 406,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP3"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP3"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "SWAP3"
										},
										{
											"begin": 186,
											"end": 449,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"logic(bool,bool)": "87bfe677"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"bool\"},{\"name\":\"b\",\"type\":\"bool\"}],\"name\":\"logic\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Blockchain/Logical operator.sol\":\"LogicalOperator\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Blockchain/Logical operator.sol\":{\"keccak256\":\"0xd85560c4c8f07f79a7f051863b8578999a244fbd755aec715c667e58de4c800f\",\"urls\":[\"bzzr://938d81e5f1fc78337a2a1e6608c04c6171d2eb3ef46f53139f494922b0ac63a2\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Blockchain/Logical operator.sol": {
				"ast": {
					"absolutePath": "Blockchain/Logical operator.sol",
					"exportedSymbols": {
						"LogicalOperator": [
							38
						]
					},
					"id": 39,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "54:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "LogicalOperator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "256:193:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"name": "andResult",
														"nodeType": "VariableDeclaration",
														"scope": 36,
														"src": "284:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 14,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "284:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 16,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "301:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"id": 17,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "306:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "301:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "284:23:0"
											},
											{
												"assignments": [
													21
												],
												"declarations": [
													{
														"constant": false,
														"id": 21,
														"name": "orResult",
														"nodeType": "VariableDeclaration",
														"scope": 36,
														"src": "334:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 20,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "334:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 25,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 22,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "350:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"id": 23,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "355:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "350:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "334:22:0"
											},
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"name": "notResult",
														"nodeType": "VariableDeclaration",
														"scope": 36,
														"src": "384:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 26,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "384:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 30,
												"initialValue": {
													"argumentTypes": null,
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "401:2:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 28,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "402:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "384:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 31,
															"name": "andResult",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "414:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 32,
															"name": "orResult",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "425:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 33,
															"name": "notResult",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "435:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 34,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "413:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$",
														"typeString": "tuple(bool,bool,bool)"
													}
												},
												"functionReturnParameters": 13,
												"id": 35,
												"nodeType": "Return",
												"src": "406:39:0"
											}
										]
									},
									"documentation": null,
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "logic",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "201:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "201:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "209:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "200:16:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "238:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "238:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "244:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "244:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "250:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 11,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "237:18:0"
									},
									"scope": 38,
									"src": "186:263:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 39,
							"src": "103:349:0"
						}
					],
					"src": "54:398:0"
				},
				"id": 0
			}
		}
	}
}