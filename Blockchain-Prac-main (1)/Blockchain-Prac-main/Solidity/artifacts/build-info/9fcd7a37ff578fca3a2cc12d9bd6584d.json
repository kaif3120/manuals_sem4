{
	"id": "9fcd7a37ff578fca3a2cc12d9bd6584d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.0",
	"solcLongVersion": "0.5.0+commit.1d4f565a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Blockchain/Assignment Operator.sol": {
				"content": "// Solidity program to demonstrate\r\n// Assignment Operator\r\npragma solidity ^0.5.0;\r\n\r\n// Creating a contract\r\ncontract SolidityTest {\r\n    uint16 public assignment = 20;\r\n    uint assignment_add = 50;\r\n    uint assign_sub = 50;\r\n    uint assign_mul = 10;\r\n    uint assign_div = 50;\r\n    uint assign_mod = 32;\r\n\r\n    // Defining function to\r\n    // demonstrate Assignment Operator\r\n    function getResult() public {\r\n        assignment_add += 10;\r\n        assign_sub -= 20;\r\n        assign_mul *= 10;\r\n        assign_div /= 10;\r\n        assign_mod %= 20;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Blockchain/Assignment Operator.sol": {
				"SolidityTest": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "assignment",
							"outputs": [
								{
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getResult",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Blockchain/Assignment Operator.sol\":111:564  contract SolidityTest {\r... */\n  mstore(0x40, 0x80)\n    /* \"Blockchain/Assignment Operator.sol\":167:169  20 */\n  0x14\n    /* \"Blockchain/Assignment Operator.sol\":140:169  uint16 public assignment = 20 */\n  0x0\n  dup1\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Blockchain/Assignment Operator.sol\":198:200  50 */\n  0x32\n    /* \"Blockchain/Assignment Operator.sol\":176:200  uint assignment_add = 50 */\n  0x1\n  sstore\n    /* \"Blockchain/Assignment Operator.sol\":225:227  50 */\n  0x32\n    /* \"Blockchain/Assignment Operator.sol\":207:227  uint assign_sub = 50 */\n  0x2\n  sstore\n    /* \"Blockchain/Assignment Operator.sol\":252:254  10 */\n  0xa\n    /* \"Blockchain/Assignment Operator.sol\":234:254  uint assign_mul = 10 */\n  0x3\n  sstore\n    /* \"Blockchain/Assignment Operator.sol\":279:281  50 */\n  0x32\n    /* \"Blockchain/Assignment Operator.sol\":261:281  uint assign_div = 50 */\n  0x4\n  sstore\n    /* \"Blockchain/Assignment Operator.sol\":306:308  32 */\n  0x20\n    /* \"Blockchain/Assignment Operator.sol\":288:308  uint assign_mod = 32 */\n  0x5\n  sstore\n    /* \"Blockchain/Assignment Operator.sol\":111:564  contract SolidityTest {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Blockchain/Assignment Operator.sol\":111:564  contract SolidityTest {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Blockchain/Assignment Operator.sol\":111:564  contract SolidityTest {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x71ca2ecf\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xde292789\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Blockchain/Assignment Operator.sol\":140:169  uint16 public assignment = 20 */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"Blockchain/Assignment Operator.sol\":140:169  uint16 public assignment = 20 */\n      pop\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Blockchain/Assignment Operator.sol\":386:561  function getResult() public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"Blockchain/Assignment Operator.sol\":386:561  function getResult() public {\r... */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"Blockchain/Assignment Operator.sol\":140:169  uint16 public assignment = 20 */\n    tag_6:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"Blockchain/Assignment Operator.sol\":386:561  function getResult() public {\r... */\n    tag_9:\n        /* \"Blockchain/Assignment Operator.sol\":443:445  10 */\n      0xa\n        /* \"Blockchain/Assignment Operator.sol\":425:439  assignment_add */\n      0x1\n      0x0\n        /* \"Blockchain/Assignment Operator.sol\":425:445  assignment_add += 10 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Blockchain/Assignment Operator.sol\":470:472  20 */\n      0x14\n        /* \"Blockchain/Assignment Operator.sol\":456:466  assign_sub */\n      0x2\n      0x0\n        /* \"Blockchain/Assignment Operator.sol\":456:472  assign_sub -= 20 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Blockchain/Assignment Operator.sol\":497:499  10 */\n      0xa\n        /* \"Blockchain/Assignment Operator.sol\":483:493  assign_mul */\n      0x3\n      0x0\n        /* \"Blockchain/Assignment Operator.sol\":483:499  assign_mul *= 10 */\n      dup3\n      dup3\n      sload\n      mul\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Blockchain/Assignment Operator.sol\":524:526  10 */\n      0xa\n        /* \"Blockchain/Assignment Operator.sol\":510:520  assign_div */\n      0x4\n      0x0\n        /* \"Blockchain/Assignment Operator.sol\":510:526  assign_div /= 10 */\n      dup3\n      dup3\n      sload\n      dup2\n      iszero\n      iszero\n      tag_11\n      jumpi\n      invalid\n    tag_11:\n      div\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Blockchain/Assignment Operator.sol\":551:553  20 */\n      0x14\n        /* \"Blockchain/Assignment Operator.sol\":537:547  assign_mod */\n      0x5\n      0x0\n        /* \"Blockchain/Assignment Operator.sol\":537:553  assign_mod %= 20 */\n      dup3\n      dup3\n      sload\n      dup2\n      iszero\n      iszero\n      tag_12\n      jumpi\n      invalid\n    tag_12:\n      mod\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Blockchain/Assignment Operator.sol\":386:561  function getResult() public {\r... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820666f19a7d261bd142889fd7da3d74bda9987fb2406062c36fa2ea26c1dd6771d0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260146000806101000a81548161ffff021916908361ffff16021790555060326001556032600255600a6003556032600455602060055534801561004657600080fd5b50610143806100566000396000f3fe60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806371ca2ecf14610051578063de29278914610084575b600080fd5b34801561005d57600080fd5b5061006661009b565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561009057600080fd5b506100996100ae565b005b6000809054906101000a900461ffff1681565b600a6001600082825401925050819055506014600260008282540392505081905550600a600360008282540292505081905550600a600460008282548115156100f357fe5b049250508190555060146005600082825481151561010d57fe5b069250508190555056fea165627a7a72305820666f19a7d261bd142889fd7da3d74bda9987fb2406062c36fa2ea26c1dd6771d0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x14 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x32 PUSH1 0x1 SSTORE PUSH1 0x32 PUSH1 0x2 SSTORE PUSH1 0xA PUSH1 0x3 SSTORE PUSH1 0x32 PUSH1 0x4 SSTORE PUSH1 0x20 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 DUP1 PUSH2 0x56 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x71CA2ECF EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xDE292789 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0xAE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x14 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD MUL SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD DUP2 ISZERO ISZERO PUSH2 0xF3 JUMPI INVALID JUMPDEST DIV SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x14 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD DUP2 ISZERO ISZERO PUSH2 0x10D JUMPI INVALID JUMPDEST MOD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH7 0x6F19A7D261BD14 0x28 DUP10 REVERT PUSH30 0xA3D74BDA9987FB2406062C36FA2EA26C1DD6771D00290000000000000000 ",
							"sourceMap": "111:453:0:-;;;167:2;140:29;;;;;;;;;;;;;;;;;;;;198:2;176:24;;225:2;207:20;;252:2;234:20;;279:2;261:20;;306:2;288:20;;111:453;8:9:-1;5:2;;;30:1;27;20:12;5:2;111:453:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806371ca2ecf14610051578063de29278914610084575b600080fd5b34801561005d57600080fd5b5061006661009b565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561009057600080fd5b506100996100ae565b005b6000809054906101000a900461ffff1681565b600a6001600082825401925050819055506014600260008282540392505081905550600a600360008282540292505081905550600a600460008282548115156100f357fe5b049250508190555060146005600082825481151561010d57fe5b069250508190555056fea165627a7a72305820666f19a7d261bd142889fd7da3d74bda9987fb2406062c36fa2ea26c1dd6771d0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x71CA2ECF EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xDE292789 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0xAE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x14 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD MUL SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD DUP2 ISZERO ISZERO PUSH2 0xF3 JUMPI INVALID JUMPDEST DIV SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x14 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD DUP2 ISZERO ISZERO PUSH2 0x10D JUMPI INVALID JUMPDEST MOD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH7 0x6F19A7D261BD14 0x28 DUP10 REVERT PUSH30 0xA3D74BDA9987FB2406062C36FA2EA26C1DD6771D00290000000000000000 ",
							"sourceMap": "111:453:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;140:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;140:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;386:175;;8:9:-1;5:2;;;30:1;27;20:12;5:2;386:175:0;;;;;;140:29;;;;;;;;;;;;;:::o;386:175::-;443:2;425:14;;:20;;;;;;;;;;;470:2;456:10;;:16;;;;;;;;;;;497:2;483:10;;:16;;;;;;;;;;;524:2;510:10;;:16;;;;;;;;;;;;;;;;;;551:2;537:10;;:16;;;;;;;;;;;;;;;;;;386:175::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "64600",
								"executionCost": "120414",
								"totalCost": "185014"
							},
							"external": {
								"assignment()": "442",
								"getResult()": "101372"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 564,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 111,
									"end": 564,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 111,
									"end": 564,
									"name": "MSTORE"
								},
								{
									"begin": 167,
									"end": 169,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "DUP1"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "EXP"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "DUP2"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "SLOAD"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "DUP2"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "MUL"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "NOT"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "AND"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "SWAP1"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "DUP4"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "AND"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "MUL"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "OR"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "SWAP1"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "SSTORE"
								},
								{
									"begin": 140,
									"end": 169,
									"name": "POP"
								},
								{
									"begin": 198,
									"end": 200,
									"name": "PUSH",
									"value": "32"
								},
								{
									"begin": 176,
									"end": 200,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 176,
									"end": 200,
									"name": "SSTORE"
								},
								{
									"begin": 225,
									"end": 227,
									"name": "PUSH",
									"value": "32"
								},
								{
									"begin": 207,
									"end": 227,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 207,
									"end": 227,
									"name": "SSTORE"
								},
								{
									"begin": 252,
									"end": 254,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 234,
									"end": 254,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 234,
									"end": 254,
									"name": "SSTORE"
								},
								{
									"begin": 279,
									"end": 281,
									"name": "PUSH",
									"value": "32"
								},
								{
									"begin": 261,
									"end": 281,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 261,
									"end": 281,
									"name": "SSTORE"
								},
								{
									"begin": 306,
									"end": 308,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "SSTORE"
								},
								{
									"begin": 111,
									"end": 564,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 111,
									"end": 564,
									"name": "POP"
								},
								{
									"begin": 111,
									"end": 564,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 564,
									"name": "DUP1"
								},
								{
									"begin": 111,
									"end": 564,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 564,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 111,
									"end": 564,
									"name": "CODECOPY"
								},
								{
									"begin": 111,
									"end": 564,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 111,
									"end": 564,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820666f19a7d261bd142889fd7da3d74bda9987fb2406062c36fa2ea26c1dd6771d0029",
									".code": [
										{
											"begin": 111,
											"end": 564,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "MSTORE"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "LT"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "SWAP1"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "DIV"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "AND"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "PUSH",
											"value": "71CA2ECF"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "PUSH",
											"value": "DE292789"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 564,
											"name": "REVERT"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "POP"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMP"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "MLOAD"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP3"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "AND"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "AND"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP2"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "MSTORE"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "ADD"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP2"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "POP"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "POP"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "MLOAD"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP2"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SUB"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "RETURN"
										},
										{
											"begin": 386,
											"end": 561,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 386,
											"end": 561,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 561,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 561,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 561,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 386,
											"end": 561,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 386,
											"end": 561,
											"name": "JUMP"
										},
										{
											"begin": 386,
											"end": 561,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 386,
											"end": 561,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 561,
											"name": "STOP"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SLOAD"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "EXP"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DIV"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "AND"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP2"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 386,
											"end": 561,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 386,
											"end": 561,
											"name": "JUMPDEST"
										},
										{
											"begin": 443,
											"end": 445,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP3"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP3"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "SLOAD"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "ADD"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "SWAP3"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "SSTORE"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 470,
											"end": 472,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 456,
											"end": 466,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 456,
											"end": 466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 456,
											"end": 472,
											"name": "DUP3"
										},
										{
											"begin": 456,
											"end": 472,
											"name": "DUP3"
										},
										{
											"begin": 456,
											"end": 472,
											"name": "SLOAD"
										},
										{
											"begin": 456,
											"end": 472,
											"name": "SUB"
										},
										{
											"begin": 456,
											"end": 472,
											"name": "SWAP3"
										},
										{
											"begin": 456,
											"end": 472,
											"name": "POP"
										},
										{
											"begin": 456,
											"end": 472,
											"name": "POP"
										},
										{
											"begin": 456,
											"end": 472,
											"name": "DUP2"
										},
										{
											"begin": 456,
											"end": 472,
											"name": "SWAP1"
										},
										{
											"begin": 456,
											"end": 472,
											"name": "SSTORE"
										},
										{
											"begin": 456,
											"end": 472,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 499,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 483,
											"end": 493,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 483,
											"end": 493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 483,
											"end": 499,
											"name": "DUP3"
										},
										{
											"begin": 483,
											"end": 499,
											"name": "DUP3"
										},
										{
											"begin": 483,
											"end": 499,
											"name": "SLOAD"
										},
										{
											"begin": 483,
											"end": 499,
											"name": "MUL"
										},
										{
											"begin": 483,
											"end": 499,
											"name": "SWAP3"
										},
										{
											"begin": 483,
											"end": 499,
											"name": "POP"
										},
										{
											"begin": 483,
											"end": 499,
											"name": "POP"
										},
										{
											"begin": 483,
											"end": 499,
											"name": "DUP2"
										},
										{
											"begin": 483,
											"end": 499,
											"name": "SWAP1"
										},
										{
											"begin": 483,
											"end": 499,
											"name": "SSTORE"
										},
										{
											"begin": 483,
											"end": 499,
											"name": "POP"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 510,
											"end": 520,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 510,
											"end": 520,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "DUP3"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "DUP3"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "SLOAD"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "DUP2"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "JUMPI"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "INVALID"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "JUMPDEST"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "DIV"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "SWAP3"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "POP"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "POP"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "DUP2"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "SWAP1"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "SSTORE"
										},
										{
											"begin": 510,
											"end": 526,
											"name": "POP"
										},
										{
											"begin": 551,
											"end": 553,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 537,
											"end": 547,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 537,
											"end": 547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "DUP3"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "DUP3"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SLOAD"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "DUP2"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "ISZERO"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "ISZERO"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "JUMPI"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "INVALID"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "JUMPDEST"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "MOD"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SWAP3"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "POP"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "POP"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "DUP2"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "SSTORE"
										},
										{
											"begin": 537,
											"end": 553,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 561,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"assignment()": "71ca2ecf",
							"getResult()": "de292789"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"assignment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getResult\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Blockchain/Assignment Operator.sol\":\"SolidityTest\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Blockchain/Assignment Operator.sol\":{\"keccak256\":\"0x0ecfd43a5778a00b9b643bc47dd0e911a4f28d14ef8f0e5d7dc7b5599fdda8a9\",\"urls\":[\"bzzr://252b2a53578b01c32cf2367e7f68f41422e4c238d34be3e2bf0c290c281a30a3\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Blockchain/Assignment Operator.sol": {
				"ast": {
					"absolutePath": "Blockchain/Assignment Operator.sol",
					"exportedSymbols": {
						"SolidityTest": [
							44
						]
					},
					"id": 45,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "60:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44
							],
							"name": "SolidityTest",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"name": "assignment",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "140:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 2,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "140:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3230",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "167:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "assignment_add",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "176:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "176:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3530",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "198:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"name": "assign_sub",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "207:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "207:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3530",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "225:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 13,
									"name": "assign_mul",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "234:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "234:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3130",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "252:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 16,
									"name": "assign_div",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "261:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "261:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3530",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "279:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 19,
									"name": "assign_mod",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "288:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "288:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "306:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "414:147:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 22,
														"name": "assignment_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "425:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "443:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "425:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "425:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 26,
														"name": "assign_sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "456:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3230",
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "470:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "456:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "456:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 30,
														"name": "assign_mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "483:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "497:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "483:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "483:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 34,
														"name": "assign_div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "510:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "/=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "524:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "510:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "510:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 38,
														"name": "assign_mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "537:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "%=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3230",
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "551:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "537:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "537:16:0"
											}
										]
									},
									"documentation": null,
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:0:0"
									},
									"scope": 44,
									"src": "386:175:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 45,
							"src": "111:453:0"
						}
					],
					"src": "60:506:0"
				},
				"id": 0
			}
		}
	}
}