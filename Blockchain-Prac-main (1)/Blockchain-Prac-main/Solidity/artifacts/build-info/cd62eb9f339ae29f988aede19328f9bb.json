{
	"id": "cd62eb9f339ae29f988aede19328f9bb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.0",
	"solcLongVersion": "0.5.0+commit.1d4f565a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Blockchain/Conditional operator.sol": {
				"content": "pragma solidity ^0.5.0;\r\ncontract SolidityTest {\r\nfunction sub(uint a, uint b) public pure returns (uint) {\r\nuint result = (a > b) ? a - b : b - a;\r\nreturn result;\r\n}\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Blockchain/Conditional operator.sol": {
				"SolidityTest": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "a",
									"type": "uint256"
								},
								{
									"name": "b",
									"type": "uint256"
								}
							],
							"name": "sub",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Blockchain/Conditional operator.sol\":25:169  contract SolidityTest {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Blockchain/Conditional operator.sol\":25:169  contract SolidityTest {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Blockchain/Conditional operator.sol\":25:169  contract SolidityTest {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0xb67d77c5\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Blockchain/Conditional operator.sol\":50:166  function sub(uint a, uint b) public pure returns (uint) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_3\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_3:\n        /* \"Blockchain/Conditional operator.sol\":50:166  function sub(uint a, uint b) public pure returns (uint) {\r... */\n      pop\n      tag_4\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n        /* \"Blockchain/Conditional operator.sol\":50:166  function sub(uint a, uint b) public pure returns (uint) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_6)\n    tag_4:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \"Blockchain/Conditional operator.sol\":100:104  uint */\n      0x0\n        /* \"Blockchain/Conditional operator.sol\":109:120  uint result */\n      dup1\n        /* \"Blockchain/Conditional operator.sol\":128:129  b */\n      dup3\n        /* \"Blockchain/Conditional operator.sol\":124:125  a */\n      dup5\n        /* \"Blockchain/Conditional operator.sol\":124:129  a > b */\n      gt\n        /* \"Blockchain/Conditional operator.sol\":123:146  (a > b) ? a - b : b - a */\n      tag_8\n      jumpi\n        /* \"Blockchain/Conditional operator.sol\":145:146  a */\n      dup4\n        /* \"Blockchain/Conditional operator.sol\":141:142  b */\n      dup4\n        /* \"Blockchain/Conditional operator.sol\":141:146  b - a */\n      sub\n        /* \"Blockchain/Conditional operator.sol\":123:146  (a > b) ? a - b : b - a */\n      jump(tag_9)\n    tag_8:\n        /* \"Blockchain/Conditional operator.sol\":137:138  b */\n      dup3\n        /* \"Blockchain/Conditional operator.sol\":133:134  a */\n      dup5\n        /* \"Blockchain/Conditional operator.sol\":133:138  a - b */\n      sub\n        /* \"Blockchain/Conditional operator.sol\":123:146  (a > b) ? a - b : b - a */\n    tag_9:\n        /* \"Blockchain/Conditional operator.sol\":109:146  uint result = (a > b) ? a - b : b - a */\n      swap1\n      pop\n        /* \"Blockchain/Conditional operator.sol\":156:162  result */\n      dup1\n        /* \"Blockchain/Conditional operator.sol\":149:162  return result */\n      swap2\n      pop\n      pop\n        /* \"Blockchain/Conditional operator.sol\":50:166  function sub(uint a, uint b) public pure returns (uint) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058206185af15eadb4e4b8556ed406bee2420a940bcdbc4fcae9e17a5875b0ad4d3ce0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060e58061001f6000396000f3fe608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063b67d77c5146044575b600080fd5b348015604f57600080fd5b50608360048036036040811015606457600080fd5b8101908080359060200190929190803590602001909291905050506099565b6040518082815260200191505060405180910390f35b60008082841160a95783830360ad565b8284035b9050809150509291505056fea165627a7a723058206185af15eadb4e4b8556ed406bee2420a940bcdbc4fcae9e17a5875b0ad4d3ce0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE5 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xB67D77C5 EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x83 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH1 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 GT PUSH1 0xA9 JUMPI DUP4 DUP4 SUB PUSH1 0xAD JUMP JUMPDEST DUP3 DUP5 SUB JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH2 0x85AF ISZERO 0xea 0xdb 0x4e 0x4b DUP6 JUMP 0xed BLOCKHASH PUSH12 0xEE2420A940BCDBC4FCAE9E17 0xa5 DUP8 JUMPDEST EXP 0xd4 0xd3 0xce STOP 0x29 ",
							"sourceMap": "25:144:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:144:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063b67d77c5146044575b600080fd5b348015604f57600080fd5b50608360048036036040811015606457600080fd5b8101908080359060200190929190803590602001909291905050506099565b6040518082815260200191505060405180910390f35b60008082841160a95783830360ad565b8284035b9050809150509291505056fea165627a7a723058206185af15eadb4e4b8556ed406bee2420a940bcdbc4fcae9e17a5875b0ad4d3ce0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xB67D77C5 EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x83 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH1 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 GT PUSH1 0xA9 JUMPI DUP4 DUP4 SUB PUSH1 0xAD JUMP JUMPDEST DUP3 DUP5 SUB JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH2 0x85AF ISZERO 0xea 0xdb 0x4e 0x4b DUP6 JUMP 0xed BLOCKHASH PUSH12 0xEE2420A940BCDBC4FCAE9E17 0xa5 DUP8 JUMPDEST EXP 0xd4 0xd3 0xce STOP 0x29 ",
							"sourceMap": "25:144:0:-;;;;;;;;;;;;;;;;;;;;;;;;50:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50:116:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;50:116:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;100:4;109:11;128:1;124;:5;123:23;;145:1;141;:5;123:23;;;137:1;133;:5;123:23;109:37;;156:6;149:13;;;50:116;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "45800",
								"executionCost": "99",
								"totalCost": "45899"
							},
							"external": {
								"sub(uint256,uint256)": "371"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 169,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 169,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 169,
									"name": "MSTORE"
								},
								{
									"begin": 25,
									"end": 169,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 169,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 169,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 169,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 169,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 169,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 169,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 169,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 169,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058206185af15eadb4e4b8556ed406bee2420a940bcdbc4fcae9e17a5875b0ad4d3ce0029",
									".code": [
										{
											"begin": 25,
											"end": 169,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "DIV"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "AND"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "PUSH",
											"value": "B67D77C5"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 169,
											"name": "REVERT"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "JUMPDEST"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "DUP2"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "ADD"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "ADD"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP3"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP2"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "ADD"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP3"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP2"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "JUMP"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "JUMPDEST"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "MLOAD"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "DUP3"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "DUP2"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "MSTORE"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "ADD"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP2"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "MLOAD"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP2"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SUB"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "RETURN"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "JUMPDEST"
										},
										{
											"begin": 100,
											"end": 104,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 109,
											"end": 120,
											"name": "DUP1"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP3"
										},
										{
											"begin": 124,
											"end": 125,
											"name": "DUP5"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "GT"
										},
										{
											"begin": 123,
											"end": 146,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 123,
											"end": 146,
											"name": "JUMPI"
										},
										{
											"begin": 145,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 141,
											"end": 142,
											"name": "DUP4"
										},
										{
											"begin": 141,
											"end": 146,
											"name": "SUB"
										},
										{
											"begin": 123,
											"end": 146,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 123,
											"end": 146,
											"name": "JUMP"
										},
										{
											"begin": 123,
											"end": 146,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 123,
											"end": 146,
											"name": "JUMPDEST"
										},
										{
											"begin": 137,
											"end": 138,
											"name": "DUP3"
										},
										{
											"begin": 133,
											"end": 134,
											"name": "DUP5"
										},
										{
											"begin": 133,
											"end": 138,
											"name": "SUB"
										},
										{
											"begin": 123,
											"end": 146,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 123,
											"end": 146,
											"name": "JUMPDEST"
										},
										{
											"begin": 109,
											"end": 146,
											"name": "SWAP1"
										},
										{
											"begin": 109,
											"end": 146,
											"name": "POP"
										},
										{
											"begin": 156,
											"end": 162,
											"name": "DUP1"
										},
										{
											"begin": 149,
											"end": 162,
											"name": "SWAP2"
										},
										{
											"begin": 149,
											"end": 162,
											"name": "POP"
										},
										{
											"begin": 149,
											"end": 162,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP3"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "SWAP2"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 166,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"sub(uint256,uint256)": "b67d77c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"sub\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Blockchain/Conditional operator.sol\":\"SolidityTest\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Blockchain/Conditional operator.sol\":{\"keccak256\":\"0xd61519de4a9b64afe047f9a25d036b2b0095cf38e2e60a506f25e25979026baf\",\"urls\":[\"bzzr://383cc623fc23641b355d02e384e45336ce890cce46dcf61f2bec39b44291dcf1\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Blockchain/Conditional operator.sol": {
				"ast": {
					"absolutePath": "Blockchain/Conditional operator.sol",
					"exportedSymbols": {
						"SolidityTest": [
							28
						]
					},
					"id": 29,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 28,
							"linearizedBaseContracts": [
								28
							],
							"name": "SolidityTest",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "106:60:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "109:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "109:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 23,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 12,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "124:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 13,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "128:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "124:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 15,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 19,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "141:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 20,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "145:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "141:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "123:23:0",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 16,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "133:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 17,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "137:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "133:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "109:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "156:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 25,
												"nodeType": "Return",
												"src": "149:13:0"
											}
										]
									},
									"documentation": null,
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "63:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "63:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "71:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "71:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "62:16:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "100:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "100:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "99:6:0"
									},
									"scope": 28,
									"src": "50:116:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 29,
							"src": "25:144:0"
						}
					],
					"src": "0:171:0"
				},
				"id": 0
			}
		}
	}
}